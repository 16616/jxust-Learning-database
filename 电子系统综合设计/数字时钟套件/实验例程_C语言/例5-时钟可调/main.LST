C51 COMPILER V9.01   MAIN                                                                  12/16/2015 10:55:55 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /***************************************************************************
   2          标题：  时钟程序
   3          实验板：电子时钟套件
   4          作者：  
   5          客服QQ：
   6          邮箱：  
   7          说明：  时间显示+可调
   8          操作：长按S2按钮进入时间设置，按顺序从分，时，日，月，星期，年进行调节，
   9                S1键确认，S2键切换，
  10                    S1键对值加1改变，直到到全调好再按S2进行保存退出
  11          ******************************************************************************/
  12          
  13          //头文件:
  14          #include <reg52.h>
  15          #include "SMG4.h"
  16          #include "DS1302.h"
  17          
  18          //引脚定义:
  19          sbit S1 = P3^1; //定义按键1
  20          sbit S2 = P3^0; //定义按键2
  21          
  22          sbit SPK = P1^5;        //蜂鸣器控制引脚
  23          
  24          //常量定义
  25          code unsigned char ly_Tup[]={59,59,23,31,12,7,99};              //设置调整时时做最大值判断
  26                                                                  //钞=59，分=59  ，时=23，日=31，月=12，星期=7，年=99
  27          
  28          //变量定义
  29          unsigned char ly_timer[7]={0,20,12,9,7,4,15};   //0秒，20分，12时，9日，7月，星期4，15年                        
  30                                                                                                                                                                                                  //用于读时间信息缓冲，初值为第一次的写入时间                            
  31          unsigned char ly_key;                           //保存键值
  32          unsigned char ly_keyon=0;               //作为按钮是否松开的判断
  33          
  34          
  35          //延时子函数
  36          void delay(unsigned char i){
  37   1              while(i--);
  38   1      }
  39          
  40          //扫描键盘输入
  41          void ReadKey(void)
  42          {
  43   1              if(!(S1&S2))                                    //先判断是否有键按下
  44   1              {
  45   2                      SPK=0;                                                  //有键按下，发出蜂鸣提示音
  46   2                      delay(100);                                     //这里的延时是消除干扰
  47   2                      if((!(S1&S2))&&(ly_keyon==0))   //确定有按键按下 且是刚按下执行，否则不执行
  48   2                      {                       
  49   3                              if(S1==0){                              //按键1按下
  50   4                                      ly_key=1;                               //赋值
  51   4                                      ly_keyon=1;                     //处理完，将按键视为按下
  52   4                              }
  53   3                              else if(S2==0){ //按键2按下，同上
  54   4                                      ly_key=2;                       
  55   4                                      ly_keyon=1;
C51 COMPILER V9.01   MAIN                                                                  12/16/2015 10:55:55 PAGE 2   

  56   4                              }
  57   3                      }
  58   2              }
  59   1              else
  60   1              {
  61   2                      ly_keyon=0;     //      无按钮按下
  62   2                      SPK=1;                  // 关闭蜂鸣器
  63   2              }
  64   1      }
  65          
  66          //调整时间设定函数
  67          void SetRTC(void)
  68          {
  69   1              unsigned char i=0,tmp;
  70   1              unsigned char lcc=1;            //作为调整位置的索引号，从1也就是‘分’开始设置，秒不调，归0
  71   1              unsigned char lt[7];            //时间缓存
  72   1      
  73   1              ReadKey();                                                      //先做一次键盘扫描，然后将键值复制0，不让设置按键影响后面的处理
  74   1              ly_key=0;
  75   1              
  76   1              for(i=1;i<7;i++){                               //将数据BCD码转为二进制
  77   2                      tmp=ly_timer[i]>>4;             
  78   2                      lt[i]=ly_timer[i]&0x0f;
  79   2                      lt[i]=tmp*10+lt[i];     
  80   2              }
  81   1              tmp=0;
  82   1              
  83   1              while(1){
  84   2                      DisPlayS(15);                                   //调用显示带延时的显示函数，闪烁的快慢由这个延时参数决定
  85   2                      ReadKey();                                              //键盘扫描
  86   2                      
  87   2                      if(ly_key)                                              //有键按下处理
  88   2                      {
  89   3                              switch(ly_key){
  90   4                              case 1:                                                         //1键值加1，当小于设定的最大值时加1，否则回0
  91   4                                      if(lt[lcc]<ly_Tup[lcc])
  92   4                                              lt[lcc]++;
  93   4                                      else
  94   4                                              lt[lcc]=0;
  95   4                                      break;
  96   4                              case 2:                                                         //2键切换
  97   4                                      lcc++;
  98   4                                      if(lcc>6){                                      //当时间值都设置完成后保存退出
  99   5                                              lt[0]=0;                                //秒归0
 100   5                                              Set_RTC(lt);
 101   5                                              SPK=1;                                          //当我们最后按下切换键时，蜂鸣器是被打开的，所以退出时要将蜂鸣器关闭
 102   5                                              return;
 103   5                                      }
 104   4                                      break;
 105   4                              }
 106   3                              ly_key=0;
 107   3                      }
 108   2                      
 109   2                      if(tmp==0)      //闪烁效果，通过这个常量判断相应位的显示与不显示的轮流，为0时显示，为180时关闭显示
 110   2                      {
 111   3                              switch(lcc){            //由这个变量来决定显示相应的内容
 112   4                              case 1:
 113   4                              case 2:
 114   4                                      ly_SMGcp[1]=1;                  //时分中间两个点亮起
 115   4                                      ly_SMGcp[2]=1;
 116   4                              
 117   4                                      ly_SMGbuf[0]=(lt[2]/10);                //时
C51 COMPILER V9.01   MAIN                                                                  12/16/2015 10:55:55 PAGE 3   

 118   4                                      ly_SMGbuf[1]=(lt[2]%10);
 119   4      
 120   4                                      ly_SMGbuf[2]=(lt[1]/10);                //分
 121   4                                      ly_SMGbuf[3]=(lt[1]%10);
 122   4                                      break;
 123   4                              case 3:
 124   4                              case 4:
 125   4                                      ly_SMGcp[1]=0;
 126   4                                      ly_SMGcp[2]=1;                                                  //显示‘日月’时用一个点隔开
 127   4                              
 128   4                                      ly_SMGbuf[0]=(lt[4]/10);                //月
 129   4                                      ly_SMGbuf[1]=(lt[4]%10);
 130   4      
 131   4                                      ly_SMGbuf[2]=(lt[3]/10);                //日
 132   4                                      ly_SMGbuf[3]=(lt[3]%10);
 133   4                                      break;
 134   4                              case 5:
 135   4                                      ly_SMGcp[1]=0;
 136   4                                      ly_SMGcp[2]=0;                                          //只显示一位，不显示点
 137   4                                      ly_SMGbuf[0]=10;                                        //这里的10在段值表中的值为OXFF，即关闭数码管显示
 138   4                                      ly_SMGbuf[1]=10;
 139   4                                      ly_SMGbuf[2]=10;
 140   4                              
 141   4                                      ly_SMGbuf[3]=lt[5];                             //星期
 142   4                                      break;
 143   4                              case 6:
 144   4                                      ly_SMGbuf[0]=2;
 145   4                                      ly_SMGbuf[1]=0;                 
 146   4                                      ly_SMGbuf[2]=(lt[6]/10);                //年
 147   4                                      ly_SMGbuf[3]=(lt[6]%10);
 148   4                                      break;  
 149   4                              }
 150   3                      }
 151   2                      if(tmp==180)    //关闭相应位显示，以达闪烁效果
 152   2                      {
 153   3                              switch(lcc){                            
 154   4                              case 1:
 155   4                              case 3:
 156   4                              case 5:
 157   4                                      ly_SMGbuf[2]=10;        //这里的10在段值表中的值为OXFF，即关闭数码管显示
 158   4                                      ly_SMGbuf[3]=10;
 159   4                                      break;
 160   4                              case 2:
 161   4                              case 4:
 162   4                                      ly_SMGbuf[0]=10;        
 163   4                                      ly_SMGbuf[1]=10;
 164   4                                      break;
 165   4                              case 6:
 166   4                                      ly_SMGbuf[0]=10;        
 167   4                                      ly_SMGbuf[1]=10;
 168   4                                      ly_SMGbuf[2]=10;        
 169   4                                      ly_SMGbuf[3]=10;
 170   4                                      break;
 171   4                              }
 172   3                      }
 173   2                      tmp++;
 174   2              }
 175   1      }
 176          
 177          
 178          //主函数        
 179          void main(void)  
C51 COMPILER V9.01   MAIN                                                                  12/16/2015 10:55:55 PAGE 4   

 180          {
 181   1              unsigned char oldT,DisUp=1;     //做为时间更新的显示的控制
 182   1              
 183   1              RST=0;                                                                                  //DS1302的RST是低电平复位，因此将其关闭
 184   1      
 185   1              Set_RTC(ly_timer);                                      //写时间，芯片初始化需要先写入时间进行测试，非测试时此行去掉。
 186   1                      
 187   1              while(1){
 188   2                      if(S2==0){                              //长按下2键进入调时
 189   3                              DisPlayS(5000); //调用显示函数延时为目的
 190   3                              if(S1==0){                      //再次确定长按进入
 191   4                                      SetRTC();
 192   4                                      DisUp=1;                        //设置完成后更新显示
 193   4                              }
 194   3                      }
 195   2                      
 196   2                      if(DisUp){                              //更新显示时间
 197   3                              DisUp=0;
 198   3                              Read_RTC(ly_timer,7);                                           //读时间信息
 199   3                                      
 200   3                              ly_SMGbuf[0]=ly_timer[2]/16;            //提取小时的个位和十位，存入显示缓冲待显示
 201   3                              ly_SMGbuf[1]=ly_timer[2]&0x0f;  //为什么不是除以10，这里一定注意，读出来的是BCD十进制码
 202   3                              ly_SMGbuf[2]=ly_timer[1]/16;            //提取分种的个位和十位，存入显示缓冲待显示
 203   3                              ly_SMGbuf[3]=ly_timer[1]&0x0f;
 204   3                      }
 205   2                      
 206   2                      Read_RTC(ly_timer,1);                                   //读时间信息秒  
 207   2                      if(ly_timer[0]!=oldT)                           //秒跳变更新中间点闪烁
 208   2                      {
 209   3                              oldT=ly_timer[0];
 210   3                              ly_SMGcp[1]=oldT&0x01;                  //获取秒的第0位来让中间两个小数点闪烁
 211   3                              ly_SMGcp[2]=ly_SMGcp[1];
 212   3                              if(oldT==0)                                                                     //秒归0时更新时间显示
 213   3                                      DisUp=1;
 214   3                      }
 215   2                      
 216   2                      DisPlayS(100);  //调用显示函数
 217   2              }
 218   1      }
 219          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    913    ----
   CONSTANT SIZE    =     21    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
